PROJECT(LINK_PARSER)
cmake_minimum_required(VERSION 2.6)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} ${LINK_PARSER_SOURCE_DIR} ${LINK_PARSER_SOURCE_DIR}/..)

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/")

FIND_PACKAGE(SWIG REQUIRED)
INCLUDE(${SWIG_USE_FILE})

FIND_PACKAGE(LinkGrammar REQUIRED)

INCLUDE_DIRECTORIES(${LINK_GRAMMAR_INCLUDE_DIRS})

option ( WRAP_PYTHON "Build the python SWIG bindings" ON)
option ( WRAP_PERL "Build the perl SWIG bindings" )


IF (WRAP_PYTHON)
	FIND_PACKAGE(PythonLibs)
	INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})

	SET(CMAKE_SWIG_FLAGS "")

	SET_SOURCE_FILES_PROPERTIES(link_grammar.i PROPERTIES CPLUSPLUS OFF)
	SET_SOURCE_FILES_PROPERTIES(link_grammar.i PROPERTIES SWIG_FLAGS "-includeall")

	SWIG_ADD_MODULE(clinkgrammar python link_grammar.i)

	SWIG_LINK_LIBRARIES(clinkgrammar ${PYTHON_LIBRARIES} ${LINK_GRAMMAR_LIBRARIES})
endif ( WRAP_PYTHON )

IF (WRAP_PERL)
	FIND_PACKAGE(PerlLibs)
	INCLUDE_DIRECTORIES(${PERL_INCLUDE_PATH})

	SET(CMAKE_SWIG_FLAGS "")

	SET_SOURCE_FILES_PROPERTIES(link_grammar.i PROPERTIES CPLUSPLUS OFF)
	SET_SOURCE_FILES_PROPERTIES(link_grammar.i PROPERTIES SWIG_FLAGS "-includeall")

	SWIG_ADD_MODULE(clinkgrammar perl link_grammar.i ${SOURCES})

	SWIG_LINK_LIBRARIES(clinkgrammar ${PERL_LIBRARIES})
endif ( WRAP_PERL )

